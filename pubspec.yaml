name: peachgs_flutter
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.2.6 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  
  # Application core
  window_manager: ^0.3.8      # 데스크톱 환경 실행 시, 창 크기 조절
  provider: ^6.1.2            # provider
  go_router: ^13.2.1          # 페이지 이동 router
  logger: ^2.1.0              # debug용 logger
  flutter_svg: ^2.0.10+1      # SVG 이미지 파일을 위젯으로 사용할 수 있는 패키지
  flutter_dotenv: ^5.1.0      # 실행 환경을 외부 파일로 관리
  geolocator: ^11.0.0         # 현재 사용자의 위치를 가져오는 패키지
  permission_handler: ^11.3.0 # Android, iOS에서 권한을 가져올 수 있는 패키지
  path_provider: ^2.1.2       # 어플리케이션 내부 저장소에 접근하기 위한 패키지

  # Application UI
  sidebarx: ^0.16.3            # 사이드바 패키지
  flutter_xlider: ^3.5.0       # 슬라이더 바 패키지
  flutter_speed_dial: ^7.0.0   # Speed Dial 버튼 패키지
  top_snackbar_flutter: ^3.1.0 # 스낵바 표시 패키지
  flutter_settings_ui: ^3.0.0  # 세팅 페이지를 구축할 수 있는 패키지

  # For RTSP Streaming(3개 전부 필요)
  # 3개의 패키지의 버전을 맞추어서 관리 필요
  media_kit: ^1.1.10
  media_kit_video: ^1.2.4
  media_kit_libs_video: ^1.0.4

  # For WebRTC Streming(WebView)
  webview_flutter: ^4.7.0

  # For Mavlink Message
  dart_mavlink:
    git:
      url: https://github.com/WTPENGUIN/dart_mavlink.git
      ref: main
  
  # For Desktop Map
  latlong2: ^0.9.0
  flutter_map: ^6.1.0
  flutter_map_cancellable_tile_provider: ^2.0.0
  
  #For Mobile Map(Naver)
  flutter_naver_map: ^1.1.2

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
   - .env
   - assets/image/
   - assets/image/accel_cal/
   - assets/image/mag_cal/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: NanumGothic
      fonts:
        - asset: assets/font/NanumGothicLight.otf
          weight: 300
        - asset: assets/font/NanumGothic.otf
          weight: 400
        - asset: assets/font/NanumGothicBold.otf
          weight: 700
        - asset: assets/font/NanumGothicExtraBold.otf
          weight: 800

    - family: Orbitron
      fonts:
        - asset: assets/font/OrbitronLight.otf
          weight: 300
        - asset: assets/font/Orbitron.otf
          weight: 400
        - asset: assets/font/OrbitronBold.otf
          weight: 700
        - asset: assets/font/OrbitronExtraBold.otf
          weight: 800          
